---
// Performance metrics visualization
---

<div class="performance-metrics">
  <div class="metric-card">
    <div class="metric-chart">
      <svg viewBox="0 0 100 60" class="metric-svg">
        <defs>
          <linearGradient id="gradient1" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style="stop-color:#DC2626;stop-opacity:0.8" />
            <stop offset="100%" style="stop-color:#DC2626;stop-opacity:0" />
          </linearGradient>
        </defs>
        <polyline
          class="metric-line"
          points="0,50 10,45 20,30 30,35 40,20 50,25 60,15 70,20 80,10 90,15 100,5"
          fill="none"
          stroke="#DC2626"
          stroke-width="2"
        />
        <polyline
          points="0,50 10,45 20,30 30,35 40,20 50,25 60,15 70,20 80,10 90,15 100,5 100,60 0,60"
          fill="url(#gradient1)"
        />
      </svg>
    </div>
    <div class="metric-info">
      <span class="metric-label">Antimicrobial Efficacy</span>
      <span class="metric-value">95%</span>
    </div>
  </div>
  
  <div class="metric-card">
    <div class="metric-chart">
      <svg viewBox="0 0 100 60" class="metric-svg">
        <defs>
          <linearGradient id="gradient2" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style="stop-color:#EF4444;stop-opacity:0.8" />
            <stop offset="100%" style="stop-color:#EF4444;stop-opacity:0" />
          </linearGradient>
        </defs>
        <polyline
          class="metric-line"
          points="0,40 15,35 25,25 35,20 50,10 65,8 80,5 100,3"
          fill="none"
          stroke="#EF4444"
          stroke-width="2"
        />
        <polyline
          points="0,40 15,35 25,25 35,20 50,10 65,8 80,5 100,3 100,60 0,60"
          fill="url(#gradient2)"
        />
      </svg>
    </div>
    <div class="metric-info">
      <span class="metric-label">Resistance Development</span>
      <span class="metric-value">â†“ 85%</span>
    </div>
  </div>
  
  <div class="metric-card">
    <div class="metric-chart">
      <div class="circular-progress">
        <svg viewBox="0 0 100 100">
          <circle cx="50" cy="50" r="45" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="6"/>
          <circle 
            cx="50" cy="50" r="45" 
            fill="none" 
            stroke="url(#circular-gradient)" 
            stroke-width="6"
            stroke-dasharray="283"
            stroke-dashoffset="70"
            stroke-linecap="round"
            transform="rotate(-90 50 50)"
          />
          <defs>
            <linearGradient id="circular-gradient">
              <stop offset="0%" stop-color="#DC2626"/>
              <stop offset="100%" stop-color="#EF4444"/>
            </linearGradient>
          </defs>
          <text x="50" y="50" text-anchor="middle" dy="0.3em" fill="white" font-size="20" font-weight="bold">75%</text>
        </svg>
      </div>
    </div>
    <div class="metric-info">
      <span class="metric-label">Selectivity Index</span>
      <span class="metric-value">SI > 100</span>
    </div>
  </div>
</div>

<style>
  .performance-metrics {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin: 3rem 0;
  }
  
  .metric-card {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 12px;
    padding: 1.5rem;
    transition: all 0.3s ease;
  }
  
  .metric-card:hover {
    background: rgba(255, 255, 255, 0.04);
    border-color: rgba(220, 38, 38, 0.3);
    transform: translateY(-2px);
  }
  
  .metric-chart {
    height: 100px;
    margin-bottom: 1rem;
    position: relative;
  }
  
  .metric-svg {
    width: 100%;
    height: 100%;
  }
  
  .metric-line {
    stroke-dasharray: 300;
    stroke-dashoffset: 300;
    animation: draw-line 2s ease-out forwards;
  }
  
  @keyframes draw-line {
    to {
      stroke-dashoffset: 0;
    }
  }
  
  .circular-progress {
    width: 100px;
    height: 100px;
    margin: 0 auto;
  }
  
  .metric-info {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
  }
  
  .metric-label {
    font-size: 0.85rem;
    color: var(--secondary);
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .metric-value {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--primary);
  }
  
  @media (max-width: 768px) {
    .performance-metrics {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  // Animate metrics when in view
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animated');
      }
    });
  });
  
  document.querySelectorAll('.metric-card').forEach(card => {
    observer.observe(card);
  });
</script>