---
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  sizes?: string;
  class?: string;
}

const {
  src,
  alt,
  width,
  height,
  loading = 'lazy',
  priority = false,
  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw',
  class: className = '',
} = Astro.props;

// Generate responsive image sources
const generateSrcSet = (baseSrc: string) => {
  // For now, return the original source
  // In a real optimization, you'd generate different sizes
  return baseSrc;
};

const srcSet = generateSrcSet(src);
---

<picture class={`optimized-image ${className}`}>
  <!-- Future: Add WebP/AVIF sources for modern browsers -->
  <source type="image/webp" srcset={srcSet} sizes={sizes} />
  
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading={priority ? 'eager' : loading}
    decoding="async"
    srcset={srcSet}
    sizes={sizes}
    style={priority ? '' : 'content-visibility: auto;'}
  />
</picture>

<style>
  .optimized-image {
    display: block;
    position: relative;
  }
  
  .optimized-image img {
    width: 100%;
    height: auto;
    border-radius: inherit;
    transition: opacity 0.3s ease;
    /* Optimize rendering */
    image-rendering: -webkit-optimize-contrast;
    /* Prevent layout shift */
    aspect-ratio: attr(width) / attr(height);
  }
  
  /* Loading state */
  .optimized-image img[loading="lazy"]:not([src]) {
    opacity: 0;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
  }
  
  @keyframes loading {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
  }
  
  /* Optimize for reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .optimized-image img {
      transition: none;
    }
    
    .optimized-image img[loading="lazy"]:not([src]) {
      animation: none;
      background: #f0f0f0;
    }
  }
</style>