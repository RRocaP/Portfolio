---
const currentPath = Astro.url.pathname;
const currentLang = currentPath.includes('/es/') ? 'es' : currentPath.includes('/ca/') ? 'ca' : 'en';

const navItems = {
  en: [
    { href: '#home', label: 'Home' },
    { href: '#about', label: 'About' },
    { href: '#research', label: 'Research' },
    { href: '#publications', label: 'Publications' },
    { href: '#contact', label: 'Contact' }
  ],
  es: [
    { href: '#home', label: 'Inicio' },
    { href: '#about', label: 'Acerca' },
    { href: '#research', label: 'Investigación' },
    { href: '#publications', label: 'Publicaciones' },
    { href: '#contact', label: 'Contacto' }
  ],
  ca: [
    { href: '#home', label: 'Inici' },
    { href: '#about', label: 'Sobre' },
    { href: '#research', label: 'Recerca' },
    { href: '#publications', label: 'Publicacions' },
    { href: '#contact', label: 'Contacte' }
  ]
};

const items = navItems[currentLang];
---

<nav class="nav-premium" role="navigation" aria-label="Main navigation">
  <div class="nav-container">
    <a href={`/Portfolio/${currentLang}/`} class="nav-logo" aria-label="Ramon Roca Pinilla - Home">
      <span class="logo-text">RRP</span>
    </a>
    
    <ul class="nav-menu" role="menubar" aria-label="Site navigation">
      {items.map(item => (
        <li role="none">
          <a href={item.href} class="nav-link" role="menuitem">{item.label}</a>
        </li>
      ))}
    </ul>
    
    <div class="nav-lang" role="navigation" aria-label="Language selector">
      <a href="/Portfolio/en/" class={currentLang === 'en' ? 'active' : ''} aria-label="English" aria-current={currentLang === 'en' ? 'page' : undefined}>EN</a>
      <a href="/Portfolio/es/" class={currentLang === 'es' ? 'active' : ''} aria-label="Español" aria-current={currentLang === 'es' ? 'page' : undefined}>ES</a>
      <a href="/Portfolio/ca/" class={currentLang === 'ca' ? 'active' : ''} aria-label="Català" aria-current={currentLang === 'ca' ? 'page' : undefined}>CA</a>
    </div>
    
    <button class="nav-toggle" aria-label="Toggle navigation menu" aria-expanded="false" aria-controls="nav-menu">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </div>
</nav>

<style>
  .nav-premium {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(10, 10, 10, 0.8);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    transition: all 0.3s ease;
  }
  
  .nav-premium.scrolled {
    background: rgba(10, 10, 10, 0.95);
    box-shadow: 0 1px 20px rgba(0, 0, 0, 0.5);
  }
  
  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1.25rem 2rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  
  .nav-logo {
    font-size: 1.5rem;
    font-weight: 600;
    color: #FFFFFF;
    text-decoration: none;
    letter-spacing: -0.02em;
    transition: color 0.3s ease;
  }
  
  .logo-text {
    background: linear-gradient(135deg, #FFFFFF 0%, #DC2626 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .nav-logo:hover .logo-text {
    background: linear-gradient(135deg, #DC2626 0%, #EF4444 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .nav-menu {
    display: flex;
    list-style: none;
    gap: 2.5rem;
    margin: 0;
    padding: 0;
  }
  
  .nav-link {
    color: #B8B8B8; /* Better contrast */
    text-decoration: none;
    font-size: 0.9375rem;
    font-weight: 400;
    letter-spacing: 0.02em;
    transition: color 0.3s ease;
    position: relative;
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background: #EF4444;
    transition: width 0.3s ease;
  }
  
  .nav-link:hover {
    color: #FFFFFF;
  }
  
  .nav-link:hover::after {
    width: 100%;
  }
  
  .nav-lang {
    display: flex;
    gap: 0.75rem;
  }
  
  .nav-lang a {
    padding: 0.5rem 0.875rem; /* Better touch target */
    color: #999999; /* Better contrast */
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    border: 1px solid transparent;
    border-radius: 6px;
    transition: all 0.3s ease;
  }
  
  .nav-lang a:hover {
    color: #FFFFFF;
    background: rgba(255, 255, 255, 0.05);
  }
  
  .nav-lang a.active {
    color: #EF4444; /* Better contrast */
    background: rgba(239, 68, 68, 0.1);
    border-color: rgba(239, 68, 68, 0.3);
  }
  
  .nav-toggle {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
  }
  
  .nav-toggle span {
    width: 24px;
    height: 2px;
    background: #FFFFFF;
    border-radius: 2px;
    transition: all 0.3s ease;
  }
  
  /* Mobile styles */
  @media (max-width: 768px) {
    .nav-menu {
      position: fixed;
      left: 0;
      top: 72px;
      width: 100%;
      height: calc(100vh - 72px);
      background: rgba(10, 10, 10, 0.98);
      backdrop-filter: blur(20px);
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      padding: 3rem 0;
      gap: 2rem;
      transform: translateX(100%);
      transition: transform 0.3s ease;
    }
    
    .nav-menu.active {
      transform: translateX(0);
    }
    
    .nav-toggle {
      display: flex;
    }
    
    .nav-toggle.active span:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }
    
    .nav-toggle.active span:nth-child(2) {
      opacity: 0;
    }
    
    .nav-toggle.active span:nth-child(3) {
      transform: rotate(-45deg) translate(5px, -5px);
    }
    
    .nav-lang {
      position: absolute;
      right: 60px;
    }
  }
</style>

<script>
  // Handle scroll effects
  const nav = document.querySelector('.nav-premium');
  let lastScroll = 0;
  
  window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset;
    
    if (currentScroll > 50) {
      nav?.classList.add('scrolled');
    } else {
      nav?.classList.remove('scrolled');
    }
    
    lastScroll = currentScroll;
  });
  
  // Mobile menu toggle
  const toggle = document.querySelector('.nav-toggle');
  const menu = document.querySelector('.nav-menu');
  
  toggle?.addEventListener('click', () => {
    toggle.classList.toggle('active');
    menu?.classList.toggle('active');
  });
  
  // Close mobile menu on link click
  document.querySelectorAll('.nav-link').forEach(link => {
    link.addEventListener('click', () => {
      toggle?.classList.remove('active');
      menu?.classList.remove('active');
    });
  });
  
  // Smooth scroll for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
</script>