---
// AdaptiveVideoPlayer.astro - selects optimal rendition based on viewport & connection
export interface Props { base: string; poster?: string; label?: string; autoplay?: boolean; }
const { base, poster = `${base}-480p.webm`, label = 'Video', autoplay = true } = Astro.props;
// Expects files like: base-480p.webm, base-720p.webm, base-1080p.webm
---
<video
  class="w-full rounded-lg"
  playsinline muted loop
  preload="metadata"
  aria-label={label}
  {...(autoplay ? { autoplay: true } : {})}
  poster={poster}
>
  <source src={`${base}-480p.webm`} type="video/webm" media="(max-width: 640px)" />
  <source src={`${base}-720p.webm`} type="video/webm" media="(max-width: 1200px)" />
  <source src={`${base}-1080p.webm`} type="video/webm" />
  Your browser does not support the video tag.
</video>
<script>
  // Connection-based downgrade for data saver
  const conn = (navigator).connection; 
  if (conn && (conn.saveData || /2g/.test(conn.effectiveType))) {
    const video = document.currentScript.previousElementSibling;
    if (video) {
      video.querySelectorAll('source').forEach(s => { if (!s.src.includes('-480p')) s.remove(); });
    }
  }
</script>
