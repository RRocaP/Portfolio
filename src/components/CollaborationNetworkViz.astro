---
import { collaborationNetwork } from '../data/metrics.ts';
import Icon from './Icon.astro';

interface Props {
  lang?: 'en' | 'es' | 'ca';
}

const { lang = 'en' } = Astro.props;

const translations = {
  en: {
    title: 'Collaboration Network',
    globalReach: 'Global Research Partnerships',
    networkStats: 'Network Statistics',
    institutions: 'Institutions',
    collaborators: 'Collaborators',
    publications: 'Joint Publications',
    countries: 'Countries',
    researchAreas: 'Research Areas',
    networkStrength: 'Network Strength',
    collaborationIndex: 'Collaboration Index',
    internationalReach: 'International Reach',
    activePartnerships: 'Active Partnerships',
    primaryNode: 'Primary Researcher',
    institutionNode: 'Institution',
    collaboratorNode: 'Collaborator',
    publications_unit: 'publications',
    viewDetails: 'View Details'
  },
  es: {
    title: 'Red de Colaboración',
    globalReach: 'Asociaciones de Investigación Global',
    networkStats: 'Estadísticas de Red',
    institutions: 'Instituciones',
    collaborators: 'Colaboradores',
    publications: 'Publicaciones Conjuntas',
    countries: 'Países',
    researchAreas: 'Áreas de Investigación',
    networkStrength: 'Fuerza de Red',
    collaborationIndex: 'Índice de Colaboración',
    internationalReach: 'Alcance Internacional',
    activePartnerships: 'Asociaciones Activas',
    primaryNode: 'Investigador Principal',
    institutionNode: 'Institución',
    collaboratorNode: 'Colaborador',
    publications_unit: 'publicaciones',
    viewDetails: 'Ver Detalles'
  },
  ca: {
    title: 'Xarxa de Col·laboració',
    globalReach: 'Associacions de Recerca Global',
    networkStats: 'Estadístiques de Xarxa',
    institutions: 'Institucions',
    collaborators: 'Col·laboradors',
    publications: 'Publicacions Conjuntes',
    countries: 'Països',
    researchAreas: 'Àrees de Recerca',
    networkStrength: 'Força de Xarxa',
    collaborationIndex: 'Índex de Col·laboració',
    internationalReach: 'Abast Internacional',
    activePartnerships: 'Associacions Actives',
    primaryNode: 'Investigador Principal',
    institutionNode: 'Institució',
    collaboratorNode: 'Col·laborador',
    publications_unit: 'publicacions',
    viewDetails: 'Veure Detalls'
  }
};

const t = translations[lang];

// Calculate network metrics
const totalNodes = collaborationNetwork.length;
const totalConnections = collaborationNetwork.reduce((sum, node) => sum + node.publications, 0);
const institutionNodes = collaborationNetwork.filter(node => node.type === 'institution');
const collaboratorNodes = collaborationNetwork.filter(node => node.type === 'collaborator');

// Network statistics
const networkStats = {
  totalInstitutions: institutionNodes.length,
  totalCollaborators: collaboratorNodes.length,
  totalPublications: totalConnections,
  networkDensity: Math.round((totalConnections / (totalNodes * (totalNodes - 1))) * 100),
  avgCollaborations: Math.round((totalConnections / totalNodes) * 10) / 10
};

// Define node positions for visualization (simplified layout)
const nodePositions = [
  { id: 'ramon', x: 50, y: 50, size: 60 }, // Center
  { id: 'cmri', x: 25, y: 25, size: 45 },
  { id: 'uab', x: 75, y: 25, size: 50 },
  { id: 'international_1', x: 15, y: 75, size: 35 },
  { id: 'international_2', x: 85, y: 75, size: 30 },
  { id: 'australia', x: 50, y: 85, size: 40 }
];
---

<div class="collaboration-network-viz" role="region" aria-labelledby="network-heading">
  <!-- Header -->
  <div class="text-center mb-12">
    <h2 id="network-heading" class="text-heading-xl mb-4 text-white">{t.title}</h2>
    <div class="w-24 h-1 bg-gradient-to-r from-green-600 to-green-400 mx-auto mb-6"></div>
    <p class="text-body text-gray-400 max-w-2xl mx-auto">{t.globalReach}</p>
  </div>

  <div class="grid lg:grid-cols-3 gap-8">
    <!-- Network Visualization -->
    <div class="lg:col-span-2 space-y-6">
      <!-- Network Graph -->
      <div class="relative p-8 bg-surface border border-gray-800 rounded-2xl overflow-hidden">
        <div class="relative h-96" data-network-container>
          <!-- SVG Network Graph -->
          <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
            <defs>
              <!-- Gradient definitions -->
              <radialGradient id="primaryGradient" cx="50%" cy="50%" r="50%">
                <stop offset="0%" style="stop-color:#EF4444;stop-opacity:1" />
                <stop offset="100%" style="stop-color:#DC2626;stop-opacity:0.8" />
              </radialGradient>
              <radialGradient id="institutionGradient" cx="50%" cy="50%" r="50%">
                <stop offset="0%" style="stop-color:#3B82F6;stop-opacity:1" />
                <stop offset="100%" style="stop-color:#2563EB;stop-opacity:0.8" />
              </radialGradient>
              <radialGradient id="collaboratorGradient" cx="50%" cy="50%" r="50%">
                <stop offset="0%" style="stop-color:#10B981;stop-opacity:1" />
                <stop offset="100%" style="stop-color:#059669;stop-opacity:0.8" />
              </radialGradient>
              
              <!-- Connection lines with glow effect -->
              <filter id="glow">
                <feGaussianBlur stdDeviation="0.5" result="coloredBlur"/>
                <feMerge> 
                  <feMergeNode in="coloredBlur"/>
                  <feMergeNode in="SourceGraphic"/>
                </feMerge>
              </filter>
            </defs>
            
            <!-- Connection lines -->
            {nodePositions.slice(1).map((node, index) => (
              <line
                x1="50" y1="50"
                x2={node.x} y2={node.y}
                stroke="#374151"
                stroke-width="0.3"
                opacity="0.6"
                filter="url(#glow)"
                class="connection-line"
                style={`animation-delay: ${index * 0.2}s`}
                data-animate="line"
              />
            ))}
            
            <!-- Network nodes -->
            {nodePositions.map((pos, index) => {
              const nodeData = collaborationNetwork.find(n => n.id === pos.id);
              if (!nodeData) return null;
              
              const fillGradient = nodeData.type === 'primary' ? 'url(#primaryGradient)' :
                                 nodeData.type === 'institution' ? 'url(#institutionGradient)' :
                                 'url(#collaboratorGradient)';
              
              return (
                <g class="network-node group" style={`animation-delay: ${index * 0.3}s`}>
                  <!-- Node circle -->
                  <circle
                    cx={pos.x}
                    cy={pos.y}
                    r={pos.size / 10}
                    fill={fillGradient}
                    stroke="#1F2937"
                    stroke-width="0.5"
                    class="transition-all duration-300 cursor-pointer"
                    data-animate="node"
                    data-node-id={nodeData.id}
                  />
                  
                  <!-- Node pulse effect -->
                  <circle
                    cx={pos.x}
                    cy={pos.y}
                    r={pos.size / 10}
                    fill="none"
                    stroke={nodeData.type === 'primary' ? '#EF4444' : 
                           nodeData.type === 'institution' ? '#3B82F6' : '#10B981'}
                    stroke-width="0.2"
                    opacity="0"
                    class="pulse-ring"
                  />
                  
                  <!-- Node label -->
                  <text
                    x={pos.x}
                    y={pos.y + pos.size / 8 + 2}
                    text-anchor="middle"
                    fill="#D1D5DB"
                    font-size="1.5"
                    font-weight="500"
                    class="opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                  >
                    {nodeData.name.split(' ')[0]}
                  </text>
                </g>
              );
            })}
          </svg>
          
          <!-- Interactive tooltip -->
          <div 
            id="network-tooltip" 
            class="absolute pointer-events-none bg-gray-900 border border-gray-700 rounded-lg p-3 text-sm opacity-0 transition-opacity duration-200 z-10"
            style="transform: translate(-50%, -100%)"
          >
            <div class="font-medium text-white" id="tooltip-title"></div>
            <div class="text-gray-400" id="tooltip-institution"></div>
            <div class="text-gray-300 mt-1" id="tooltip-publications"></div>
          </div>
        </div>
        
        <!-- Network Legend -->
        <div class="mt-6 flex items-center justify-center gap-6 text-caption">
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 rounded-full bg-red-500"></div>
            <span class="text-gray-400">{t.primaryNode}</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 rounded-full bg-blue-500"></div>
            <span class="text-gray-400">{t.institutionNode}</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 rounded-full bg-green-500"></div>
            <span class="text-gray-400">{t.collaboratorNode}</span>
          </div>
        </div>
      </div>
      
      <!-- Collaboration Stats -->
      <div class="grid grid-cols-2 gap-4">
        <div class="p-4 bg-surface border border-gray-800 rounded-xl">
          <div class="flex items-center gap-3 mb-3">
            <Icon name="users" size="md" class="text-green-400" />
            <span class="text-body text-white">{t.activePartnerships}</span>
          </div>
          <div class="text-heading-lg text-white font-bold">{networkStats.totalCollaborators}</div>
          <div class="text-caption text-gray-400">Research partners</div>
        </div>
        
        <div class="p-4 bg-surface border border-gray-800 rounded-xl">
          <div class="flex items-center gap-3 mb-3">
            <Icon name="globe" size="md" class="text-blue-400" />
            <span class="text-body text-white">{t.internationalReach}</span>
          </div>
          <div class="text-heading-lg text-white font-bold">60%</div>
          <div class="text-caption text-gray-400">Global partnerships</div>
        </div>
      </div>
    </div>

    <!-- Network Statistics -->
    <div class="space-y-6">
      <div class="flex items-center gap-3 mb-6">
        <Icon name="chart-pie" size="lg" class="text-green-400" />
        <h3 class="text-heading-lg text-white">{t.networkStats}</h3>
      </div>

      <!-- Key Metrics -->
      <div class="space-y-4">
        <div class="p-6 bg-surface border border-gray-800 rounded-2xl">
          <div class="text-center mb-4">
            <div class="text-display-sm font-bold text-white mb-2">{networkStats.networkDensity}%</div>
            <div class="text-body text-gray-400">{t.networkStrength}</div>
          </div>
          
          <!-- Network strength indicator -->
          <div class="relative w-24 h-24 mx-auto">
            <svg class="w-24 h-24 transform -rotate-90" viewBox="0 0 80 80">
              <circle
                cx="40"
                cy="40"
                r="32"
                stroke="currentColor"
                stroke-width="6"
                fill="none"
                class="text-gray-700"
              />
              <circle
                cx="40"
                cy="40"
                r="32"
                stroke="currentColor"
                stroke-width="6"
                fill="none"
                stroke-linecap="round"
                class="text-green-500 transition-all duration-2000 ease-out"
                style={`stroke-dasharray: ${2 * Math.PI * 32}; stroke-dashoffset: ${2 * Math.PI * 32 * (1 - networkStats.networkDensity / 100)}`}
                data-animate="circle"
              />
            </svg>
          </div>
        </div>
        
        <!-- Detailed Statistics */
        <div class="space-y-3">
          <div class="p-4 bg-surface border border-gray-800 rounded-xl">
            <div class="flex items-center justify-between">
              <span class="text-body text-gray-300">{t.institutions}</span>
              <span class="text-body-sm text-white font-medium">{networkStats.totalInstitutions}</span>
            </div>
          </div>
          
          <div class="p-4 bg-surface border border-gray-800 rounded-xl">
            <div class="flex items-center justify-between">
              <span class="text-body text-gray-300">{t.collaborators}</span>
              <span class="text-body-sm text-white font-medium">{networkStats.totalCollaborators}</span>
            </div>
          </div>
          
          <div class="p-4 bg-surface border border-gray-800 rounded-xl">
            <div class="flex items-center justify-between">
              <span class="text-body text-gray-300">{t.publications}</span>
              <span class="text-body-sm text-white font-medium">{networkStats.totalPublications}</span>
            </div>
          </div>
          
          <div class="p-4 bg-surface border border-gray-800 rounded-xl">
            <div class="flex items-center justify-between">
              <span class="text-body text-gray-300">Avg. per Partner</span>
              <span class="text-body-sm text-white font-medium">{networkStats.avgCollaborations}</span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Partnership Highlights -->
      <div class="p-6 bg-surface border border-gray-800 rounded-2xl">
        <h4 class="text-heading-md text-white mb-4">Key Partnerships</h4>
        
        <div class="space-y-3">
          {collaborationNetwork
            .filter(node => node.type !== 'primary')
            .sort((a, b) => b.publications - a.publications)
            .slice(0, 4)
            .map((partner, index) => (
              <div 
                class="flex items-center justify-between p-3 bg-gray-800/30 rounded-lg"
                style={`animation-delay: ${index * 0.1}s`}
              >
                <div class="flex-1">
                  <div class="text-body-sm text-white font-medium">{partner.name}</div>
                  <div class="text-caption text-gray-400">{partner.institution}</div>
                </div>
                <div class="text-caption text-gray-300 font-medium">
                  {partner.publications} {t.publications_unit}
                </div>
              </div>
            ))}
        </div>
      </div>
      
      <!-- Global Reach -->
      <div class="p-6 bg-gradient-to-br from-green-600/10 to-blue-600/10 border border-gray-800 rounded-2xl">
        <div class="text-center">
          <Icon name="globe" size="xl" class="text-green-400 mx-auto mb-4" />
          <div class="text-heading-lg text-white font-bold mb-2">Global Network</div>
          <div class="text-body text-gray-300 mb-4">Research Excellence</div>
          <div class="grid grid-cols-2 gap-4 text-center">
            <div>
              <div class="text-heading-sm text-white font-bold">4</div>
              <div class="text-caption text-gray-400">{t.countries}</div>
            </div>
            <div>
              <div class="text-heading-sm text-white font-bold">3</div>
              <div class="text-caption text-gray-400">{t.researchAreas}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .collaboration-network-viz {
    animation: fadeInUp 0.8s ease-out;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(40px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Network animations */
  .network-node {
    animation: nodeAppear 0.6s ease-out;
    animation-fill-mode: both;
  }
  
  .connection-line {
    stroke-dasharray: 10;
    stroke-dashoffset: 10;
    animation: drawLine 1s ease-out forwards;
    animation-fill-mode: both;
  }
  
  @keyframes nodeAppear {
    from {
      opacity: 0;
      transform: scale(0.3);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes drawLine {
    to {
      stroke-dashoffset: 0;
    }
  }
  
  /* Pulse effect for active nodes */
  .pulse-ring {
    animation: pulse 2s infinite;
  }
  
  @keyframes pulse {
    0% {
      opacity: 1;
      r: 0;
    }
    70% {
      opacity: 0.5;
      r: 8;
    }
    100% {
      opacity: 0;
      r: 12;
    }
  }
  
  /* Interactive effects */
  .network-node:hover circle:first-child {
    filter: brightness(1.3) drop-shadow(0 0 8px currentColor);
  }
  
  .connection-line:hover {
    stroke-width: 0.6;
    opacity: 1;
  }
  
  /* Responsive design */
  @media (max-width: 1024px) {
    .collaboration-network-viz .grid.lg\\:grid-cols-3 {
      grid-template-columns: 1fr;
    }
    
    .collaboration-network-viz .lg\\:col-span-2 {
      grid-column: span 1;
    }
  }
  
  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    .collaboration-network-viz,
    .collaboration-network-viz * {
      animation: none !important;
      transition: none !important;
    }
    
    .pulse-ring {
      display: none;
    }
  }
  
  @media (prefers-contrast: high) {
    .collaboration-network-viz .border {
      border-width: 2px;
    }
    
    .connection-line {
      stroke: #6B7280;
      stroke-width: 0.5;
    }
  }
</style>

<script>
  function initNetworkViz() {
    const tooltip = document.getElementById('network-tooltip');
    const nodes = document.querySelectorAll('.network-node');
    
    // Network data mapping
    const nodeData = {
      'ramon': { name: 'Ramon Roca Pinilla', institution: 'CMRI', publications: 16 },
      'cmri': { name: 'Children\'s Medical Research Institute', institution: 'Australia', publications: 3 },
      'uab': { name: 'Universitat Autònoma de Barcelona', institution: 'Spain', publications: 10 },
      'international_1': { name: 'European Collaborators', institution: 'Various EU', publications: 5 },
      'international_2': { name: 'US Research Partners', institution: 'Various US', publications: 3 },
      'australia': { name: 'Australian Networks', institution: 'Various AU', publications: 4 }
    };
    
    nodes.forEach(node => {
      const circle = node.querySelector('circle[data-node-id]');
      if (!circle) return;
      
      const nodeId = circle.dataset.nodeId;
      const data = nodeData[nodeId];
      
      if (!data) return;
      
      // Mouse enter
      node.addEventListener('mouseenter', (e) => {
        if (tooltip) {
          const titleEl = tooltip.querySelector('#tooltip-title');
          const institutionEl = tooltip.querySelector('#tooltip-institution');
          const publicationsEl = tooltip.querySelector('#tooltip-publications');
          
          if (titleEl) titleEl.textContent = data.name;
          if (institutionEl) institutionEl.textContent = data.institution;
          if (publicationsEl) publicationsEl.textContent = `${data.publications} publications`;
          
          tooltip.style.opacity = '1';
        }
        
        // Highlight connections
        const lines = document.querySelectorAll('.connection-line');
        lines.forEach(line => {
          line.style.stroke = '#10B981';
          line.style.strokeWidth = '0.8';
          line.style.opacity = '0.8';
        });
      });
      
      // Mouse move
      node.addEventListener('mousemove', (e) => {
        if (tooltip) {
          const rect = e.currentTarget.closest('[data-network-container]').getBoundingClientRect();
          const x = e.clientX - rect.left;
          const y = e.clientY - rect.top;
          
          tooltip.style.left = `${x}px`;
          tooltip.style.top = `${y - 10}px`;
        }
      });
      
      // Mouse leave
      node.addEventListener('mouseleave', () => {
        if (tooltip) {
          tooltip.style.opacity = '0';
        }
        
        // Reset connections
        const lines = document.querySelectorAll('.connection-line');
        lines.forEach(line => {
          line.style.stroke = '#374151';
          line.style.strokeWidth = '0.3';
          line.style.opacity = '0.6';
        });
      });
      
      // Click handler for accessibility
      node.addEventListener('click', () => {
        console.log(`Network node clicked: ${data.name}`);
      });
      
      // Keyboard navigation
      node.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          node.dispatchEvent(new MouseEvent('click'));
        }
      });
      
      // Make nodes focusable
      node.setAttribute('tabindex', '0');
      node.setAttribute('role', 'button');
      node.setAttribute('aria-label', `${data.name} - ${data.publications} publications`);
    });
    
    // Animate circular progress
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const circles = entry.target.querySelectorAll('[data-animate="circle"]');
          circles.forEach((circle: Element) => {
            setTimeout(() => {
              (circle as SVGCircleElement).style.strokeDashoffset = '50px';
            }, 500);
          });
          
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    const viz = document.querySelector('.collaboration-network-viz');
    if (viz) {
      observer.observe(viz);
    }
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initNetworkViz);
  } else {
    initNetworkViz();
  }
</script>