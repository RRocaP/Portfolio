---
export interface Props {
  lang: 'en' | 'es' | 'ca';
  strings: any;
}

const { lang, strings } = Astro.props;
const languages = [
  { code: 'en', label: 'EN' },
  { code: 'es', label: 'ES' },
  { code: 'ca', label: 'CA' }
];
---

<nav class="sticky top-0 bg-primary-bg/95 backdrop-blur-sm border-b border-border z-50">
  <div class="container mx-auto max-w-container px-6 py-4">
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-8">
        <a href={`/${lang}/`} class="text-body-text hover:text-accent-yellow transition-colors focus-ring">
          RRP
        </a>
        
        <div class="hidden md:flex space-x-6">
          <a href="#research" class="text-text-muted hover:text-body-text transition-colors focus-ring">
            {strings.nav.research}
          </a>
          <a href="#timeline" class="text-text-muted hover:text-body-text transition-colors focus-ring">
            {strings.nav.timeline}
          </a>
          <a href="#publications" class="text-text-muted hover:text-body-text transition-colors focus-ring">
            {strings.nav.publications}
          </a>
          <a href="#contact" class="text-text-muted hover:text-body-text transition-colors focus-ring">
            {strings.nav.contact}
          </a>
        </div>
      </div>
      
      <div class="flex items-center space-x-4">
        <select
          class="bg-surface-1 text-body-text border border-border rounded px-3 py-1 text-sm focus-ring"
          onchange="window.location.href = this.value"
        >
          {languages.map((l) => (
            <option value={`/Portfolio/${l.code}/`} selected={lang === l.code}>
              {l.label}
            </option>
          ))}
        </select>
      </div>
    </div>
  </div>
</nav>