---
// Latent Labs-style protein visualization component with scroll-controlled video playback
// This component uses pre-rendered video frames for smooth 3D protein animations
---

<div class="protein-visualization-container">
  <div class="visualization-wrapper">
    <canvas id="protein-canvas" class="protein-canvas"></canvas>
    <div class="loading-overlay" id="loading-overlay">
      <div class="loading-spinner"></div>
      <p class="loading-text">Loading protein structure...</p>
    </div>
    <div class="visualization-info">
      <h3 class="protein-name">Antimicrobial Peptide LL-37</h3>
      <p class="protein-description">Human cathelicidin with broad-spectrum antimicrobial activity</p>
    </div>
  </div>
  <div class="scroll-indicator">
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path d="M12 5v14m0 0l-7-7m7 7l7-7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    <span>Scroll to rotate</span>
  </div>
</div>

<script>
  import ProteinVisualization from '../utils/ProteinVisualization';

  document.addEventListener('DOMContentLoaded', () => {
    new ProteinVisualization();
  });
</script>

<style>
  .protein-visualization-container {
    position: relative;
    width: 100%;
    margin: var(--space-xl) 0;
  }
  
  .visualization-wrapper {
    position: relative;
    width: 100%;
    height: 60vh;
    min-height: 400px;
    max-height: 800px;
    background: var(--background-alt);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid var(--border);
  }
  
  .protein-canvas {
    width: 100%;
    height: 100%;
    display: block;
    cursor: grab;
  }
  
  .protein-canvas:active {
    cursor: grabbing;
  }
  
  .loading-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--background);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: opacity 0.3s ease;
    z-index: 10;
  }
  
  .loading-spinner {
    width: 48px;
    height: 48px;
    border: 3px solid var(--border);
    border-top-color: var(--accent-red);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-bottom: var(--space-md);
  }
  
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
  
  .loading-text {
    color: var(--secondary);
    font-size: 0.9rem;
  }
  
  .visualization-info {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: var(--space-lg);
    background: linear-gradient(to top, var(--background) 0%, transparent 100%);
    pointer-events: none;
  }
  
  .protein-name {
    font-size: 1.5rem;
    font-weight: var(--font-weight-light);
    margin-bottom: var(--space-xs);
    color: var(--primary);
  }
  
  .protein-description {
    font-size: 0.95rem;
    color: var(--secondary);
    max-width: 600px;
  }
  
  .scroll-indicator {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-sm);
    margin-top: var(--space-md);
    color: var(--secondary);
    font-size: 0.9rem;
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }
  
  .scroll-indicator:hover {
    opacity: 1;
  }
  
  .scroll-indicator svg {
    animation: bounce 2s ease-in-out infinite;
  }
  
  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(4px);
    }
    60% {
      transform: translateY(2px);
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .visualization-wrapper {
      height: 50vh;
      min-height: 300px;
    }
    
    .visualization-info {
      padding: var(--space-md);
    }
    
    .protein-name {
      font-size: 1.2rem;
    }
    
    .protein-description {
      font-size: 0.85rem;
    }
  }
  
  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    .visualization-wrapper {
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }
    
    .loading-overlay {
      background: var(--background);
    }
  }
</style>