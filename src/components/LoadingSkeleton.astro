---
export interface Props {
  variant?: 'card' | 'text' | 'avatar' | 'timeline';
  count?: number;
  className?: string;
}

const { variant = 'card', count = 1, className = '' } = Astro.props;
---

<div class={`skeleton-container ${className}`} aria-label="Loading content..." role="status">
  {Array.from({ length: count }, (_, i) => (
    <div class={`skeleton skeleton-${variant}`}>
      {variant === 'card' && (
        <>
          <div class="skeleton-header">
            <div class="skeleton-avatar"></div>
            <div class="skeleton-title-group">
              <div class="skeleton-title"></div>
              <div class="skeleton-subtitle"></div>
            </div>
          </div>
          <div class="skeleton-content">
            <div class="skeleton-line"></div>
            <div class="skeleton-line"></div>
            <div class="skeleton-line short"></div>
          </div>
        </>
      )}
      
      {variant === 'text' && (
        <>
          <div class="skeleton-line"></div>
          <div class="skeleton-line"></div>
          <div class="skeleton-line short"></div>
        </>
      )}
      
      {variant === 'avatar' && (
        <div class="skeleton-avatar-only"></div>
      )}
      
      {variant === 'timeline' && (
        <>
          <div class="skeleton-timeline-dot"></div>
          <div class="skeleton-timeline-content">
            <div class="skeleton-year"></div>
            <div class="skeleton-title"></div>
            <div class="skeleton-line short"></div>
          </div>
        </>
      )}
    </div>
  ))}
</div>

<style>
  .skeleton-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .skeleton {
    animation: skeleton-loading 1.5s ease-in-out infinite alternate;
  }

  @keyframes skeleton-loading {
    0% {
      opacity: 0.6;
    }
    100% {
      opacity: 1;
    }
  }

  /* Card variant */
  .skeleton-card {
    background: var(--background-card);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: var(--space-md);
  }

  .skeleton-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .skeleton-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    background-size: 200% 100%;
    animation: skeleton-shimmer 1.5s infinite;
  }

  .skeleton-title-group {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .skeleton-title {
    height: 20px;
    border-radius: 4px;
    background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    background-size: 200% 100%;
    animation: skeleton-shimmer 1.5s infinite;
    width: 70%;
  }

  .skeleton-subtitle {
    height: 16px;
    border-radius: 4px;
    background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    background-size: 200% 100%;
    animation: skeleton-shimmer 1.5s infinite;
    width: 50%;
  }

  .skeleton-content {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .skeleton-line {
    height: 16px;
    border-radius: 4px;
    background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    background-size: 200% 100%;
    animation: skeleton-shimmer 1.5s infinite;
  }

  .skeleton-line.short {
    width: 60%;
  }

  /* Text variant */
  .skeleton-text {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  /* Avatar variant */
  .skeleton-avatar-only {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    background-size: 200% 100%;
    animation: skeleton-shimmer 1.5s infinite;
    margin: 0 auto;
  }

  /* Timeline variant */
  .skeleton-timeline {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    position: relative;
  }

  .skeleton-timeline-dot {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    background-size: 200% 100%;
    animation: skeleton-shimmer 1.5s infinite;
    flex-shrink: 0;
    margin-top: 4px;
  }

  .skeleton-timeline-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .skeleton-year {
    width: 60px;
    height: 14px;
    border-radius: 4px;
    background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    background-size: 200% 100%;
    animation: skeleton-shimmer 1.5s infinite;
  }

  @keyframes skeleton-shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .skeleton {
      animation: none;
    }

    .skeleton-avatar,
    .skeleton-title,
    .skeleton-subtitle,
    .skeleton-line,
    .skeleton-avatar-only,
    .skeleton-timeline-dot,
    .skeleton-year {
      animation: none;
      background: var(--border);
    }
  }

  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    .skeleton-avatar,
    .skeleton-title,
    .skeleton-subtitle,
    .skeleton-line,
    .skeleton-avatar-only,
    .skeleton-timeline-dot,
    .skeleton-year {
      background: linear-gradient(90deg, var(--background-alt) 25%, var(--border) 50%, var(--background-alt) 75%);
    }
  }
</style>