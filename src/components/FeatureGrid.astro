---
import type { Feature } from '../data/features';
import { featureSets } from '../data/features';
const { lang = 'en' } = Astro.props as { lang?: string };
const features: Feature[] = featureSets[lang] || featureSets.en;
---
<section class="features" aria-labelledby="features-heading">
  <div class="container">
    <h2 id="features-heading" class="section-title">{lang === 'en' ? 'Capabilities' : lang === 'es' ? 'Capacidades' : 'Capacitats'}</h2>
    <div class="feature-grid">
      {features.map(f => (
        <div class="feature-card" data-id={f.id}>
          <div class="icon" aria-hidden="true">
            {f.icon === 'dna' && (
              <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
                <path d="M7 3c6 2 10 6 10 9s-4 7-10 9" />
                <path d="M17 3c-6 2-10 6-10 9s4 7 10 9" />
                <path d="M4 7h6M14 17h6M6 12h12" opacity=".7" />
              </svg>
            )}
            {f.icon === 'flask' && (
              <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
                <path d="M10 2v4l-5 8a5 5 0 004.3 8h5.4A5 5 0 0019 14l-5-8V2" />
                <path d="M8 6h8" opacity=".6" />
              </svg>
            )}
            {f.icon === 'rocket' && (
              <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
                <path d="M14 4c3 0 6 3 6 6-3 0-6 3-6 6-3 0-6-3-6-6 0-3 3-6 6-6z" />
                <path d="M9 15l-6 6 3-7" />
              </svg>
            )}
            {f.icon === 'loop' && (
              <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3 11a6 6 0 0110-4l2 2" />
                <path d="M21 13a6 6 0 01-10 4l-2-2" />
                <path d="M13 7h2V5" />
                <path d="M11 17h-2v2" />
              </svg>
            )}
          </div>
          <h3>{f.title}</h3>
          <p>{f.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
.features { padding: var(--space-xl) 0; position: relative; }
.feature-grid { display: grid; grid-template-columns: repeat(auto-fit,minmax(240px,1fr)); gap: 1.2rem; }
.feature-card { background: var(--background-card); border: 1px solid var(--border); padding: 1.25rem 1.1rem 1.4rem; border-radius: 14px; position: relative; overflow: hidden; backdrop-filter: blur(6px); transition: border-color .25s, transform .25s, box-shadow .25s; }
.feature-card::before { content: ''; position: absolute; inset: 0; background: radial-gradient(circle at 30% 20%, rgba(255,217,61,0.08), transparent 60%); opacity: 0; transition: opacity .35s; }
.feature-card:hover { border-color: var(--accent-red); transform: translateY(-6px); box-shadow: 0 10px 32px -8px rgba(218,41,28,0.25); }
.feature-card:hover::before { opacity: 1; }
.icon { font-size: 1.75rem; line-height: 1; margin-bottom: .75rem; filter: drop-shadow(0 2px 4px rgba(0,0,0,.25)); }
.feature-card h3 { font-size: 1rem; margin: 0 0 .4rem; font-weight: 600; letter-spacing: -.01em; }
.feature-card p { font-size: .85rem; line-height: 1.45; color: var(--tertiary); margin: 0; }
@media (prefers-reduced-motion: no-preference) { .feature-card { will-change: transform; } }
@media (max-width: 640px) { .feature-card { padding: 1rem; } }
</style>
