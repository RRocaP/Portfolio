var e=Object.defineProperty,t=(t,i,n)=>((t,i,n)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[i]=n)(t,"symbol"!=typeof i?i+"":i,n);import"./vendor-react.DgACkRi3.js";class i{constructor(e={}){t(this,"animations",new Map),t(this,"intersectionObserver"),t(this,"resizeObserver"),t(this,"frameCount",0),t(this,"lastTime",0),t(this,"frameRateHistory",[]),t(this,"config"),t(this,"metrics",{totalAnimations:0,runningAnimations:0,completedAnimations:0,droppedFrames:0,averageFrameTime:0,performanceScore:100}),this.config={respectReducedMotion:!0,maxConcurrentAnimations:10,frameRateThreshold:50,enablePerformanceMonitoring:!0,enableDebugMode:!1,enableGPUAcceleration:!0,enableWillChangeManagement:!0,enableHapticFeedback:!0,networkAwarePreloading:!0,...e},this.init()}init(){if(this.setupIntersectionObserver(),this.setupResizeObserver(),this.config.enablePerformanceMonitoring&&this.startPerformanceMonitoring(),this.config.respectReducedMotion){const e=window.matchMedia("(prefers-reduced-motion: reduce)");e.addEventListener("change",this.handleMotionPreferenceChange.bind(this)),e.matches&&this.pauseAllAnimations()}this.debugLog("AnimationController initialized")}register(e,t,i="load",n="medium"){this.animations.has(e)&&this.debugLog(`Animation ${e} already exists, updating...`);const a={id:e,element:t,type:i,priority:n,status:"idle",gpuAccelerated:!1,willChangeManaged:!1};this.animations.set(e,a),this.metrics.totalAnimations++,this.config.enableGPUAcceleration&&this.enableGPUAcceleration(t,a),"scroll"===i&&this.intersectionObserver&&this.intersectionObserver.observe(t),this.debugLog(`Registered animation: ${e} (${i}, ${n})`)}enableGPUAcceleration(e,t){t.gpuAccelerated||(e.style.transform=e.style.transform||"translateZ(0)",e.style.backfaceVisibility="hidden",e.style.perspective="1000px",t.gpuAccelerated=!0,this.debugLog(`GPU acceleration enabled for ${t.id}`))}manageWillChange(e,t,i){this.config.enableWillChangeManagement&&("running"!==t.status||t.willChangeManaged?"completed"===t.status&&t.willChangeManaged&&(e.style.willChange="auto",t.willChangeManaged=!1,this.debugLog(`will-change cleared for ${t.id}`)):(e.style.willChange=i.join(", "),t.willChangeManaged=!0,this.debugLog(`will-change set for ${t.id}: ${i.join(", ")}`)))}triggerHapticFeedback(e="light"){if(!this.config.enableHapticFeedback||!navigator.vibrate)return;navigator.vibrate({light:[10],medium:[20],heavy:[30]}[e])}animate(e,t,i={}){return new Promise((n,a)=>{const s=this.animations.get(e);if(!s)return void a(new Error(`Animation ${e} not registered`));if(this.shouldSkipAnimation())return this.debugLog(`Skipping animation ${e} due to reduced motion preference`),void n();if(this.metrics.runningAnimations>=this.config.maxConcurrentAnimations){if("low"===s.priority)return this.debugLog(`Skipping low-priority animation ${e} due to limit`),void n();this.cancelLowestPriorityAnimation()}const r=this.detectAnimatedProperties(t);this.manageWillChange(s.element,{...s,status:"running"},r);const o=s.element.animate(t,{duration:600,easing:"cubic-bezier(0.2, 0.8, 0.2, 1)",composite:"replace",...i});s.animation=o,s.status="running",s.startTime=performance.now(),s.duration="number"==typeof i.duration?i.duration:600,s.options=i,this.metrics.runningAnimations++,"high"!==s.priority||"click"!==s.type&&"hover"!==s.type||this.triggerHapticFeedback("light"),o.addEventListener("finish",()=>{s.status="completed",this.metrics.runningAnimations--,this.metrics.completedAnimations++,this.manageWillChange(s.element,s,r),this.debugLog(`Animation ${e} completed`),n()}),o.addEventListener("cancel",()=>{s.status="cancelled",this.metrics.runningAnimations--,this.manageWillChange(s.element,s,r),this.debugLog(`Animation ${e} cancelled`),a(new Error(`Animation ${e} was cancelled`))}),this.debugLog(`Started animation: ${e}`)})}detectAnimatedProperties(e){const t=new Set;return e.forEach(e=>{Object.keys(e).forEach(e=>{"offset"!==e&&"easing"!==e&&"composite"!==e&&t.add(e)})}),Array.from(t)}pause(e){const t=this.animations.get(e);t?.animation&&"running"===t.status&&(t.animation.pause(),t.status="paused",this.metrics.runningAnimations--,this.debugLog(`Paused animation: ${e}`))}resume(e){const t=this.animations.get(e);t?.animation&&"paused"===t.status&&(t.animation.play(),t.status="running",this.metrics.runningAnimations++,this.debugLog(`Resumed animation: ${e}`))}cancel(e){const t=this.animations.get(e);t?.animation&&(t.animation.cancel(),t.status="cancelled",this.debugLog(`Cancelled animation: ${e}`))}pauseAllAnimations(){this.animations.forEach((e,t)=>{"running"===e.status&&this.pause(t)})}resumeAllAnimations(){this.animations.forEach((e,t)=>{"paused"===e.status&&this.resume(t)})}getState(e){return this.animations.get(e)}getMetrics(){return{...this.metrics}}onScroll(e,t,i,n={}){this.register(e,t,"scroll");const{threshold:a=.1,rootMargin:s="0px",...r}=n,o=new IntersectionObserver(n=>{n.forEach(n=>{n.isIntersecting&&n.target===t&&(this.animate(e,i,r),o.unobserve(t))})},{threshold:a,rootMargin:s});o.observe(t)}parallax(e,t,i=.5,n="low"){this.register(e,t,"parallax",n);let a=!1,s=null;const r=()=>{const e=window.pageYOffset,n=t.getBoundingClientRect(),s=n.top+e,r=n.height;if(e+window.innerHeight>s&&e<s+r){const n=(e-s)*i;t.style.transform=`translate3d(0, ${n}px, 0)`}a=!1};s=()=>{a||this.shouldSkipAnimation()||(requestAnimationFrame(r),a=!0)},window.addEventListener("scroll",s,{passive:!0});const o=this.animations.get(e);o&&(o.cleanup=()=>{s&&(window.removeEventListener("scroll",s),s=null)})}magneticButton(e,t,i=.3,n="medium"){if(this.register(e,t,"hover",n),this.shouldSkipAnimation())return;let a=!1,s=null;const r=this.animations.get(e);r&&this.config.enableGPUAcceleration&&this.enableGPUAcceleration(t,r),this.config.enableWillChangeManagement&&(t.style.willChange="transform"),t.addEventListener("mouseenter",()=>{a=!0,this.triggerHapticFeedback("light"),t.style.transition="transform 0.3s cubic-bezier(0.2, 0.8, 0.2, 1)",t.style.boxShadow="0 0 20px rgba(59, 130, 246, 0.3)"}),t.addEventListener("mousemove",e=>{a&&(s&&cancelAnimationFrame(s),s=requestAnimationFrame(()=>{const n=t.getBoundingClientRect(),a=n.left+n.width/2,s=n.top+n.height/2,r=(e.clientX-a)*i,o=(e.clientY-s)*i,l=.1*(e.clientY-s),c=.1*(a-e.clientX);t.style.transform=`translate3d(${r}px, ${o}px, 0) scale(1.05) rotateX(${l}deg) rotateY(${c}deg)`}))}),t.addEventListener("mouseleave",()=>{a=!1,s&&(cancelAnimationFrame(s),s=null),t.style.transform="",t.style.boxShadow="",this.config.enableWillChangeManagement&&setTimeout(()=>{a||(t.style.willChange="auto")},300)}),t.addEventListener("click",()=>{this.triggerHapticFeedback("medium"),t.style.transform+=" scale(0.95)",setTimeout(()=>{a&&(t.getBoundingClientRect(),t.style.transform=t.style.transform.replace(" scale(0.95)",""))},100)})}stagger(e,t,i,n={}){const{staggerDelay:a=100,...s}=n,r=t.map((t,n)=>{const r=`${e}-${n}`;return this.register(r,t,"load","medium"),new Promise(e=>{setTimeout(()=>{this.animate(r,i,s).then(e)},n*a)})});return Promise.all(r)}setupIntersectionObserver(){this.intersectionObserver=new IntersectionObserver(e=>{e.forEach(e=>{const t=e.target.dataset.animationId;if(t&&e.isIntersecting){const e=this.animations.get(t);e&&"idle"===e.status&&this.debugLog(`Element ${t} entered viewport`)}})},{threshold:.1,rootMargin:"0px 0px -50px 0px"})}setupResizeObserver(){this.resizeObserver=new ResizeObserver(e=>{const t=[];this.animations.forEach((e,i)=>{"running"===e.status&&(this.pause(i),t.push(i))}),setTimeout(()=>{t.forEach(e=>this.resume(e))},150)}),this.resizeObserver.observe(document.body)}startPerformanceMonitoring(){const e=t=>{if(this.frameCount++,this.lastTime){const e=t-this.lastTime;this.frameRateHistory.push(1e3/e),this.frameRateHistory.length>60&&this.frameRateHistory.shift();const i=this.frameRateHistory.reduce((e,t)=>e+t,0)/this.frameRateHistory.length;this.metrics.averageFrameTime=e,i<this.config.frameRateThreshold&&this.metrics.droppedFrames++,this.metrics.performanceScore=Math.max(0,Math.min(100,2*i)),this.metrics.performanceScore<60&&this.metrics.runningAnimations>3&&this.pauseLowestPriorityAnimations()}this.lastTime=t,requestAnimationFrame(e)};requestAnimationFrame(e)}shouldSkipAnimation(){return!!this.config.respectReducedMotion&&window.matchMedia("(prefers-reduced-motion: reduce)").matches}cancelLowestPriorityAnimation(){let e=null;const t={low:0,medium:1,high:2};this.animations.forEach(i=>{"running"===i.status&&(!e||t[i.priority]<t[e.priority])&&(e=i)}),e&&this.cancel(e.id)}pauseLowestPriorityAnimations(){const e=Array.from(this.animations.values()).filter(e=>"running"===e.status&&"low"===e.priority);e.forEach(e=>this.pause(e.id)),this.debugLog(`Paused ${e.length} low-priority animations for performance`)}handleMotionPreferenceChange(e){e.matches?(this.pauseAllAnimations(),this.debugLog("Paused all animations due to reduced motion preference")):(this.resumeAllAnimations(),this.debugLog("Resumed animations due to motion preference change"))}debugLog(e){this.config.enableDebugMode}destroy(){this.pauseAllAnimations(),this.animations.forEach(e=>{e.cleanup&&e.cleanup()}),this.intersectionObserver?.disconnect(),this.resizeObserver?.disconnect(),this.animations.clear(),this.debugLog("AnimationController destroyed")}}let n=null;function a(e){return n||(n=new i(e)),n}const s={slideUp:[{transform:"translate3d(0, 100px, 0)",opacity:0},{transform:"translate3d(0, 0, 0)",opacity:1}],slideDown:[{transform:"translate3d(0, -100px, 0)",opacity:0},{transform:"translate3d(0, 0, 0)",opacity:1}],fadeInUp:[{opacity:0,transform:"translate3d(0, 30px, 0)"},{opacity:1,transform:"translate3d(0, 0, 0)"}],fadeInDown:[{opacity:0,transform:"translate3d(0, -30px, 0)"},{opacity:1,transform:"translate3d(0, 0, 0)"}]};export{s as a,a as g};
